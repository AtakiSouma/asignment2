<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="http://localhost:8080/css/addNew.css" />
    <title>Document</title>
  </head>
  <body>
    <%- include('header.ejs'); -%>
    <div class="container-form">
      <div class="orchid-add-form">
        <div class="Title">Create New Games Information</div>
        <form
          method="POST"
          enctype="multipart/form-data"
          onsubmit="uploadOrchid(event)"
          id="orchidForm"
        >
          <!--- Images-->
          <div class="form-group">
            <div style="display: flex; flex-direction: column; gap: 20px">
              <input
                type="file"
                accept="image/gif, image/jpeg, image/png"
                name="image"
                id="file"
                style="display: none"
                onchange="loadAndUploadFile(event)"
              />
              <div><p>Upload for images</p></div>
              <div class="fileUpload">
                <label for="file" style="cursor: pointer">
                  <img
                    src="https://www.svgrepo.com/show/309379/camera-add.svg"
                    width="50px"
                    height="50px"
                    class="input-icon"
                  />
                </label>
                <div class="fileResult">
                  <img
                    id="output"
                    src="https://static.wixstatic.com/media/fc7570_ae9913d461894a7ebb7fc420d828ab83~mv2.png/v1/fill/w_601,h_338,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/Image-empty-state.png"
                  />
                </div>
              </div>
            </div>
          </div>

          <!-- Back ground Images -->
          <div class="form-group">
            <div style="display: flex; flex-direction: column; gap: 20px">
              <input
                type="file"
                accept="image/gif, image/jpeg, image/png"
                name="image"
                id="file-background"
                style="display: none"
                onchange="loadAndUploadFileBackground(event)"
              />
              <div><p>Upload for Background images</p></div>
              <div class="fileUpload">
                <label for="file-background" style="cursor: pointer">
                  <img
                    src="https://www.svgrepo.com/show/309379/camera-add.svg"
                    width="50px"
                    height="50px"
                    class="input-icon"
                  />
                </label>
                <div class="fileResult">
                  <img
                    id="background"
                    src="https://static.wixstatic.com/media/fc7570_ae9913d461894a7ebb7fc420d828ab83~mv2.png/v1/fill/w_601,h_338,al_c,q_85,usm_0.66_1.00_0.01,enc_auto/Image-empty-state.png"
                  />
                </div>
              </div>
            </div>
          </div>

          <!-- Name -->
          <div class="form-group">
            <label> Name </label>
            <input
              type="text"
              name="name"
              id="name"
              placeholder="Enter the name"
            />
          </div>

          <!-- Nation -->

          <div class="form-group">
            <label>Nation</label>
            <input
              type="text"
              name="nation"
              id="nation"
              placeholder="Enter the Nation"
            />
          </div>

          <!-- RealseDate -->
          <div class="form-group">
            <label>release_date</label>
            <input type="date" name="release_date" id="release_date" />
          </div>

          <!-- revenue -->
          <div class="form-group">
            <label>revenue</label>
            <input
              type="text"
              name="revenue"
              placeholder="Enter the revenue"
              id="revenue"
            />
          </div>

          <!-- rating -->
          <div class="form-group">
            <label>rating</label>
            <input
              type="text"
              name="rating"
              id="rating"
              placeholder="Enter the Ratings"
            />
          </div>

          <!-- development -->
          <div class="form-group">
            <label>development</label>
            <input
              type="text"
              name="development"
              id="development"
              placeholder="Enter the development"
            />
          </div>

          <!-- category -->
          <div
            class="category-input"
            style="display: flex; flex-direction: column"
          >
            <label>Category</label>
            <select name="category" id="category">
              <% categories.forEach((data,index) => { %>
              <option value="<%=data.id%>"><%= data.name%></option>
              <% }); %>
            </select>
          </div>
          <div>
            <input type="hidden" />
          </div>
          <div>
            <button type="submit " id="submitButton">Submit</button>
          </div>
        </form>
      </div>
    </div>
    <div id="snackbar-failed">
      <i class="fa-solid fa-circle-xmark"></i>
      Create Orchid failed
    </div>
    <%- include('footer.ejs'); -%>

    <script>
      let fileURL = null;
      let fileURLBackGround = null;
      async function loadAndUploadFileBackground(event) {
        const fileInput = event.target;
        const file = fileInput.files[0];
        if (file) {
          const formData = new FormData();
          formData.append("file", file);
          await fetch("http://localhost:8080/api/upload", {
            method: "POST",
            body: formData,
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                // Handle successful upload
                console.log(
                  "File uploaded successfully from background:",
                  data.data
                );

                // Optionally, update the image source with the uploaded image URL
                const outputImage = document.getElementById("background");
                outputImage.src = data.data.fileUrl;
                fileURLBackGround = data.data.fileUrl;
              } else {
                // Handle upload failure
                console.error("File upload failed:", data);
              }
            })
            .catch((error) => {
              // Handle network or other errors
              console.error("Error during file upload:", error);
            });
        }
      }

      async function loadAndUploadFile(event) {
        const fileInput = event.target;
        const file = fileInput.files[0];

        if (file) {
          const formData = new FormData();
          formData.append("file", file);

          await fetch("http://localhost:8080/api/upload", {
            method: "POST",
            body: formData,
          })
            .then((response) => response.json())
            .then((data) => {
              if (data.success) {
                // Handle successful upload
                console.log("File uploaded successfully:", data.data);

                // Optionally, update the image source with the uploaded image URL
                const outputImage = document.getElementById("output");
                outputImage.src = data.data.fileUrl;
                fileURL = data.data.fileUrl;
              } else {
                // Handle upload failure
                console.error("File upload failed:", data);
              }
            })
            .catch((error) => {
              // Handle network or other errors
              console.error("Error during file upload:", error);
            });
        }
      }
      async function uploadOrchid(event) {
        event.preventDefault();

        const nameInput = document.getElementById("name");
        const nationInput = document.getElementById("nation");
        const release_dateInput = document.getElementById("release_date");
        const revenueInput = document.getElementById("revenue");
        const ratingInput = document.getElementById("rating");
        const developmentInput = document.getElementById("development");

        const fileImage = document.getElementById("file");
        const fileBackground = document.getElementById("file-background");

        const name = nameInput.value;
        const nation = nationInput.value;
        const release_date = release_dateInput.value;
        const revenue = revenueInput.value;
        const rating = ratingInput.value;
        const development = developmentInput.value;

        const numberPattern = /^[0-9]+$/;
        const ratingPattern = /^[1-5]$/;

        document
          .querySelectorAll(".form-group .error")
          .forEach((field) => field.classList.remove("error"));
        document
          .querySelectorAll(".error-text")
          .forEach((errorText) => errorText.remove());
        if (name === "") {
          showError(nameInput, "Enter the Name of Games");
        }
        if (nation === "") {
          showError(nationInput, " Enter the nation");
        }
        if (release_date === "") {
          showError(release_dateInput, "Enter the Release Date");
        }
        if (!numberPattern.test(revenue)) {
          showError(revenueInput, "Enter the revenue with Number");
        }
        if (!ratingPattern.test(rating)) {
          showError(ratingInput, "Enter the rating from 1 - 5 star");
        }
        if (development === "") {
          showError(developmentInput, "Enter the development");
        }
        if (!fileImage.files.length) {
          showError(fileImage, "Select an image file");
        }

        if (!fileBackground.files.length) {
          showError(fileBackground, "Select a background file");
        }
        const errorInputs = document.querySelectorAll(".form-group .error");
        if (errorInputs.length > 0) return; /*  */

        const form = document.getElementById("orchidForm");

        const formData = {
          name: form.elements["name"].value,
          image: fileURL,
          background: fileURLBackGround,
          nation: form.elements["nation"].value,
          release_date: form.elements["release_date"].value,
          revenue: form.elements["revenue"].value,
          rating: form.elements["rating"].value,
          development: form.elements["development"].value,
          category: form.elements["category"].value,
        };
        console.log(formData);
        try {
          // Make a POST request to your backend API
          const response = await fetch("http://localhost:8080/api/orchids/", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },

            body: JSON.stringify(formData),
          });

          if (response.ok) {
            loadHomePageContent();
            setTimeout(() => {
              showCreateToastSucessss();
            }, 500);
            console.log("Orchid added successfully!");
          } else {
            showFailedToast();
          }
        } catch (error) {
          console.error("Error:", error.message);
        }
      }

      var loadFile = function (event) {
        var image = document.getElementById("output");
        image.src = URL.createObjectURL(event.target.files[0]);
      };
      function showCreateToastSucessss() {
        var x = document.getElementById("snackbar-success");
        x.className = "show";
        setTimeout(function () {
          x.className = x.className.replace("show", "");
        }, 3000);
      }
      function showFailedToast() {
        var x = document.getElementById("snackbar-failed");
        x.className = "show";
        setTimeout(function () {
          x.className = x.className.replace("show", "");
        }, 3000);
      }
      function loadHomePageContent() {
        $.ajax({
          type: "GET",
          url: "/dashboard",
          success: function (response) {
            // Replace the content of a specific container with the loaded content
            document.open();
            document.write(response);
            document.close();

            // Update the URL in the address bar
            var newUrl =
              window.location.protocol +
              "//" +
              window.location.host +
              "/dashboard";
            window.history.pushState({ path: newUrl }, "", newUrl);
          },
          error: function () {
            console.log("Error loading home page");
          },
        });
      }

      /// Show Errror
      const showError = (field, errorText) => {
        field.classList.add("error");
        const errorElement = document.createElement("small");
        errorElement.classList.add("error-text");
        errorElement.innerText = errorText;
        field.closest(".form-group").appendChild(errorElement);
      };
    </script>
  </body>
</html>
